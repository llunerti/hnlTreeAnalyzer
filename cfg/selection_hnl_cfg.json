{
    "gen_matching_cuts": [
        {
            "cut": "C_mu_Hnl_isHnlDaughter>0",
            "printout": "muon matching HNL mu daughter"
        },
        {
            "cut": "C_mu_Ds_isHnlBrother>0",
            "printout": "muon matching Ds mu daughter"
        },
        {
            "cut": "C_pi_isHnlDaughter>0",
            "printout": "pi matching HNL pi daughter"
        }
    ],
    "mN1p5_ctau10p0mm_rw_points": [
        15.0,
        30.0,
        45.0,
        60.0,
        75.0,
        90.0,
        100.0
    ],
    "new_variables": [
        {
            "definition": "sqrt(C_Hnl_px*C_Hnl_px + C_Hnl_py*C_Hnl_py + C_Hnl_pz*C_Hnl_pz)",
            "name": "C_Hnl_p"
        },
        {
            "definition": "(C_Hnl_vertex_3DDist_PV*C_Hnl_mass)/C_Hnl_p",
            "name": "C_Hnl_l_prop"
        },
        {
            "definition": "get_mu_trigger_matching(HLT_mu9_ip6_matched,HLT_mu_trig_idx, C_mu_Ds_idx)",
            "name": "C_mu_Ds_matched_MU9_IP6"
        },
        {
            "definition": "get_mu_trigger_matching(HLT_mu9_ip6_matched,HLT_mu_trig_idx, C_mu_Hnl_idx)",
            "name": "C_mu_Hnl_matched_MU9_IP6"
        },
        {
            "definition": "get_PxPyPzE_HnlInvariantMass(C_mu_Hnl_fitted_px,C_mu_Hnl_fitted_py,C_mu_Hnl_fitted_pz,C_mu_Hnl_fitted_E,C_pi_fitted_px,C_pi_fitted_py,C_pi_fitted_pz,C_pi_fitted_E)",
            "name": "C_Hnl_fitted_mass"
        },
        {
            "definition": "get_PxPyPzE_newM_HnlInvariantMass(C_mu_Hnl_fitted_px,C_mu_Hnl_fitted_py,C_mu_Hnl_fitted_pz,C_mu_Hnl_fitted_E,0.105658,C_pi_fitted_px,C_pi_fitted_py,C_pi_fitted_pz,C_pi_fitted_E,0.493677)",
            "name": "C_Hnl_fitted_mK_mass"
        }
    ],
    "best_cand_var": {
        "definition": "get_best_cand_idx(C_Ds_vertex_prob,C_Hnl_vertex_prob,C_mu_Ds_idx,C_mu_Hnl_idx,C_pi_idx)",
        "name": "best_cand_idx"
    },
    "categories": [
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)>0 && C_Hnl_vertex_2DDist_PV<1.0",
            "label": "SSlxy0to1",
            "printout": "SS L_xy<1 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)>0 && C_Hnl_vertex_2DDist_PV>1.0 && C_Hnl_vertex_2DDist_PV<5.0",
            "label": "SSlxy1to5",
            "printout": "SS 1<L_xy<5 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)>0 && C_Hnl_vertex_2DDist_PV>5.0",
            "label": "SSlxy5toInf",
            "printout": "SS L_xy>5 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)<0 && C_Hnl_vertex_2DDist_PV<1.0",
            "label": "OSlxy0to1",
            "printout": "OS L_xy<1 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)<0 && C_Hnl_vertex_2DDist_PV>1.0 && C_Hnl_vertex_2DDist_PV<5.0",
            "label": "OSlxy1to5",
            "printout": "OS 1<L_xy<5 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge*C_mu_Ds_charge)<0 && C_Hnl_vertex_2DDist_PV>5.0",
            "label": "OSlxy5toInf",
            "printout": "OS L_xy>5 cm category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
                    "printout": "MuPi charge is zero"
                },
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        },
        {
            "cut": "(C_mu_Hnl_charge+C_pi_charge) == 0",
            "label": "inclusive",
            "printout": "neutral HNL category",
            "save": "yes",
            "selection_cuts": [
                {
                    "cut": "C_mu_Ds_matched_MU9_IP6>0",
                    "printout": "MU9_IP6 matched with muon from Ds"
                },
                {
                    "cut": "C_mu_Ds_isSoft>0",
                    "printout": "mu from Ds pass soft ID"
                },
                {
                    "cut": "C_mu_Hnl_isSoft>0",
                    "printout": "mu from HNL pass soft ID"
                }
            ]
        }
    ],
    "selection_eff_scan": [
        {
            "logic": ">",
            "low_edge": -0.0001,
            "name": "C_Hnl_vertex_2DSig_BS",
            "up_edge": 100.0
        },
        {
            "logic": ">",
            "low_edge": -0.0001,
            "name": "C_mu_Ds_BS_ip_xy",
            "up_edge": 0.5
        },
        {
            "logic": ">",
            "low_edge": -0.0001,
            "name": "C_mu_Hnl_BS_ip_xy",
            "up_edge": 0.5
        },
        {
            "logic": ">",
            "low_edge": -0.0001,
            "name": "C_pi_BS_ip_xy",
            "up_edge": 0.5
        }
    ]
}
